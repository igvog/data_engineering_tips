#!/bin/python3

import math
import os
import random
import re
import sys
import array
import numpy as np

#
# Complete the 'getMinOperations' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts LONG_INTEGER_ARRAY kValues as parameter.
#

def getMinOperations(kValues):
    # Write your code here
    output = []
    for k in kValues:
        # k=22
        list_from_numbers = range(k+1)
        # list_from_numbers = array.array('i',(0 for i in range(k+1)))
        for i in np.arange(1, k+1):
            list_from_numbers[i] = list_from_numbers[i-1] + 1
            if i%2 == 0:
                list_from_numbers[i] = min(list_from_numbers[i], list_from_numbers[i//2]+1)
        output.append(list_from_numbers[k])
    return output

input_str = """
216
50634366
64339804
126812619
30948709
95010105
7780741
19500646
54431679
48634756
148021378
71429296
129978916
12718678
52823955
45829211
78673607
2600977
15557438
34152839
65796030
67385277
113564897
6676430
16834461
53133793
106639058
113831982
60906481
105248206
122702169
25269295
19920101
139269505
61885321
91100419
40364448
119032976
101707295
1197376
8352828
16497817
47660035
67108139
1139625
14209544
73063564
135436878
115100041
137202814
132538471
138505835
94561804
112615448
120502751
35893455
113815728
118200065
79001215
101454469
54240282
8048305
115286018
73272955
115159918
36826705
41462250
63208078
19587663
48665265
54305826
65528484
89498708
61348076
30598760
59038517
46512158
139644212
140029404
112763029
16203074
42815268
74697968
69594637
104608829
144227572
51775040
49753597
40004667
143552833
142284594
26770902
10084078
86022809
149636807
60480199
146048486
97997239
91777352
19851503
21571625
65580480
112641272
116791063
86831951
62674013
133722228
71448356
6118779
81453878
50923997
61296828
66327819
22416982
7285180
129918949
39579592
131377380
7964066
128316406
132647037
133621525
97932661
92866354
92263969
110862476
54036652
17628493
33770133
64801224
24619300
125296344
89881134
35923170
43925026
111273550
20079307
148693415
84340114
132589179
43200528
15678685
91231895
3099530
79248374
40324833
126955644
51246117
10269227
143941852
130857557
125863260
120590323
59539524
74930233
129496339
140604595
19078673
45581080
74811223
81908628
47836223
81286100
89840600
129872280
36084606
21155998
26261257
145717587
75519931
134240046
95824027
80356099
53923116
40306167
82737138
30139443
146499385
22527569
119086521
20035553
70800743
48626454
35363725
120266910
92785234
94036857
87045396
143240412
52354438
81137820
456215
4476540
78818884
148958668
117006811
65203504
144393475
136595257
9211141
135243268
117670959
111929098
146768145
21402937
70598717
75890383
96033755
38584536
117599950
100963715
132914318
56313165
26179505
73665248
47979729
91983998
"""

if __name__ == '__main__':
    #fptr = open(os.environ['OUTPUT_PATH'], 'w')

    kValues_count = [ int(i) for i in input_str.split()]
    #print(kValues_count)
    #kValues = []

    #for _ in range(kValues_count):
    #    kValues_item = int(input().strip())
    #    kValues.append(kValues_item)

    result = getMinOperations(kValues_count)

    #fptr.write('\n'.join(map(str, result)))
    #fptr.write('\n')

    #fptr.close()

